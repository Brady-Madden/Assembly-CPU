Brady Madden
001333820
CSI404: Phipps

Unit Tests

Halt (opcode 0) (format 3R)
1.
	addimmediate r6 8 (96 08)
	halt (0000)
	interrupt 0 (8000)
	*shouldnâ€™t print anything*
Add (opcode 1) (format 3R)
1.					2.
addimmediate r1 9 (91 09)		addimmediate r2 -6 (92 FA)
addimmediate r2 5 (94 05)		addimmediate r1 3 (93 03)
add r2 r1 r4 (12 14)			add r1 r2 r3 (11 23)
              interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 9					R1 == 3
	R2 == 5					R2 == -6					
	R4 == 14				R3 == -3			
And (opcode 2) (format 3R)
1.					2.
	addimmediate r2 13 (92 0D)		addimmediate r1 20 (91 14) 
	addimmediate r6 7 (96 07)		addimmediate r2 20 (92 14)
    	and r2 r6 r1 (22 61)			and r1 r2 r3 (22 61)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 5					R1 == 20 
	R2 ==13				R2 == 20
	R6 == 7					R3 == 20
3. 					4.
	addimmediate r1 -1 (91 FF)		addimmediate r2 -11 (92 F5)
	addimmediate r2 1 (92 01)		addimmediate r3 -4 (92 FC)
	and r1 r2 r3 (21 23)			and r2 r3 r5 (22 35)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == -1				R2 == -11	
	R2 == 1					R3 == -4	
	R3 == 1					R5 == -12
Divide (opcode 3) (format 3R)
1.					2.	
	addimmediate r1 21 (91 15)		addimmediate r1 0 (91 00)
	addimmediate r2 0 (92 00)		addimmediate r2 -9 (92 F7)
	divide r1 r2 r3 (31 23)			divide r1 r2 r3 (31 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 21				R1 == 0
	R2 == 0					R2 == -9
	R3 == UNDEFINED			R3 == 0
3.					4.	
	addimmediate r1 25 (91 19)		addimmediate r1 -6 (91 FA)
	addimmediate r2 1 (91 01)		addimmediate r2 -3 (92 FD)
	divide r1 r2 r3 (31 23)			divide r1 r2 r3 (31 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 25 				R1 == -6  
	R2 == 1					R2 == -3
	R3 == 25				R3 == 2
5.					6.	
	addimmediate r1 -9 (91 F7)		addimmediate r1 10 (91 0A)
	addimmediate r2 3 (92 03)		addimmediate r2 4 (92 04)
	divide r1 r2 r3 (31 23)			divide r1 r2 r3 (31 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == -9				R1 == 10 
	R2 == 3					R2 == 4
	R3 == -3				R3 == 2.5
Multiply (opcode 4) (format 3R)  
1.					2.	
	addimmediate r1 1 (91 01)		addimmediate r1 11 (91 0B)
	addimmediate r2 0 (92 00)		addimmediate r2 1 (92 01)
	multiply r1 r2 r3 (41 23)			multiply r1 r2 r3 (41 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 1					R1 == 11 
	R2 == 0					R2 == 1
	R3 == 0					R3 == 11
3.					4.	
	addimmediate r1 -16 (91 F0)		addimmediate r1 3 (91 03)
	addimmediate r2 -2 (92 FE)		addimmediate r2 -4 (92 FC)
	multiply r1 r2 r3 (41 23)			multiply r1 r2 r3 (41 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == -16				R1 == 3
	R2 == -2				R2 == -4
	R3 == 32				R3 == -12
Subtract (opcode 5) (3R)
1.					2.	
	addimmediate r1 8 (91 08)		addimmediate r1 3 (91 03)
	addimmediate r2 2 (92 02)		addimmediate r2 -2 (92 FE)
	subtract r1 r2 r3 (51 23)		 	subtract r1 r2 r3 (51 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 8					R1 == 3
	R2 == 2					R2 == -2
	R3 == 6					R3 == 5
3.					4.	
	addimmediate r1 -3 (91 FD)		addimmediate r1 -6 (91 FA)
	addimmediate r2 -5 (92 FB)		addimmediate r2 4 (92 04)
	subtract r1 r2 r3 (51 23)			subtract r1 r2 r3 (51 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == -3				R1 == -6
	R2 == -5				R2 == 4
	R3 == 2					R3 == -10
Or (opcode 6) (format 3R)
1.					2.	
	addimmediate r1 9 (91 09)		addimmediate r1 2 (91 02)
	addimmediate r2 -9 (92 F7)		addimmediate r2 2 (92 02)
	or r1 r2 r3 (61 23)			or r1 r2 r3 (61 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == 9 					R1 == 2  
	R2 == -9				R2 == 2
	R3 == -1				R3 == 2
3.					4.	
	addimmediate r1 -3 (91 FD)		addimmediate r1 17 (91 11)
	addimmediate r2 -6 (92 FA)		addimmediate r2 2 (92 02)
	or r1 r2 r3 (61 23)			or r1 r2 r3 (61 23)
	interrupt 0 (8000)			interrupt 0 (8000)
	R1 == -3				R1 == 17
	R2 == -6 				R2 == 2
R3 == -1				R3 == 19
Push and Pop (opcode 7) (format stack)
1.					2.	
	addimmediate r0 1 (9001)		addimmediate r1 15(910F)
	push r0 (7040)				push r1 (7140)
						pop r1 (7180)
interrupt 1 (8001)			interrupt 0 (8000)
	memory: 1				R1 == 15
3.					4. 	
	addimmediate r1 5 (9105)		addimmediate r0 10 (90 0A)
	push r1 (7040)				pop r0
	addimmediate r2 10 (920A)		*Should throw some sort of error*
	push r2 (7240)
	pop r2	(7280)							
interrupt 0 (8000)			
	R1 == 0
	R2 ==10
	pop r1 (7180)
	interrupt 0 (8000)
	R1 == 5
	R2 == 10			
Return (opcode 7) (format stack)
1.						2.
	addimmediate r1 6 (91 06)			addimmediate r3 88 (93 58)
	addimmediate r2 17 (91 11)			push r3 (73 40)
	push r1 (71 40)					return (70 00) 
	push r2 (72 40)					*jump to 88*
	return (70 00)
	*jump to 17*						
Interrupt (opcode 8) (format int)
1.						2. 	 
addimmediate r1 9 (91 09) 			addimmediate r2 6 (92 06)
interrupt 0 (8000) 				push r2 (72 40)
r1 == 9						interrupt 1 (8001)
						memory: 6
3.
	addimmediate r1 1 (9101)
	interrupt 700 (82BC)
	*should do nothing only interrupt 0 and 1 are defined*
Addimmediate (opcode 9) (formal ai)
1.
	addimmediate r1 25 (91 19)
	interrupt 0 (8000)
	r1 == 25
2.
	addimmediate r2 9 (92 09) 
	addimmediate r1 3 (9103)
	add r1 r2 r3 (11 23)
	interrupt 0 (8000)
	r1 == 9
	r2 == 3
	r3 == 12
Branchifequal (opcode 10) (formal br)
1. 					2.
	addimmediate r1 5 (91 05)		addimmediate r1 8 (91 08)
	addimmediate r2 5 (92 05)		addimmediate r2 -2 (92 FE)
	branchifequal r1 r2 1004 (A1 27)	branchifequal r1 r2 2048 (A1 21)
	*jump to PC + 2008*				*not equal, no jump*
Branchifless (opcode 11) (format br)
1. 					2.
	addimmediate r2 15 (92 0F)		addimmediate r1 15 (91 0F)
	addimmediate r4 1 (94 01)		addimmediate r2 15 (92 0F)
	branchifless r2 r4 800 (B2 46)		branchifless r1 r2 193 (B1 2C)
	*no jump r2 is greater than r4*		*no jump r1 and r2 are equal*
3.					4.
	addimmediate r1 16 (91 10)		addimmediate r1 2 (91 02)
	addimmediate r3 21 (93 15)		addimmediate r2 7 (92 07)	
	branchifless r1 r3 1000000 (B1 31)	branchifless r1 r2 16 (B1 22)
	*address out of bounds error*		*jump to PC + 32*	
Jump (opcode 12) (format jmp)
1.					2. 
	jump 1500 (C00005DC)			jump -7000 (CFFFE4A8)
	*jump to address 3000*			*out of bounds error*
Call (opcode 13) (format jmp)
1.					2.
	call 311 (D0000137)			call 1074741824 (D400F4240)
	*jumps to function at address 622*	*out of bounds of call instruction*
Load (opcode 14) (format ls)
1.					2.
	addimmediate r1 8 (91 08)		addimmediate r1 10 (91 0A)
	load r2 r1 15 (E2 1F)			load r2 r1 -1 (E21FF) 
	interrupt 0 (8000)			interrupt 0 (8000)
	R2 == 8		 			*offset out of bounds error*
3.
	load r1 r2 4 (E124)
	interrupt 0 (8000)
	*r1 not initialized*
Store (opcode 15) (format ls)
1. 					2.
	addimmediate r1 5 (91 05)		addimmediate r1 6 (9106)
	addimmediate r2 7 (91 07)		store r1 r2 10 (F1 2A)
	store r1 r2 5 (F1 25)			interrupt 1 (8001)
	interrupt 1 (8001)			*error R2 not initialized*
	memory pointed to by R2 == 5 
					
3. 
	addimmediate r1 6 (91 06)
	addimmediate r2 10 (92 0A)
	store r1 r2 71 (F1247)
	*error offset out of bounds*
 		

		


